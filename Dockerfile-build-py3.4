FROM centos:7.3.1611

# Devtoolset-4 (equivalent of Redhat DTS 4.1) provides GCC 5.3.1
# Building Qt5 from git: https://wiki.qt.io/Building_Qt_5_from_Git
# Qt5 requirements: http://doc.qt.io/qt-5/linux-requirements.html
# Qt Web Engine: http://doc.qt.io/qt-5/qtwebengine-platform-notes.html
#                https://wiki.qt.io/How_to_Try_QtWebEngine
# PySide2: https://wiki.qt.io/PySide2_GettingStarted

# Show available devtools-4 packages
# RUN yum list available devtoolset-4-\*

RUN yum install -y deltarpm && \
    yum update -y && \
    yum install -y \
        # Devtools requirements
        centos-release-scl \
        # cmake3 requirements
        epel-release && \
    yum install -y \
        # gcc 5.3.1 (via Devtools which is equivalent of RedHat DTS)
        devtoolset-4-gcc*-5.3.1 \
        # glibc 2.17
        glibc-*-2.17 \
        # Qt5 requirements
        libXrender* libxcb* xcb* fontconfig* freetype* libXi* libXext* libX11* libSM* libICE* libglib* libpthread* gstreamer* \
        # QtWebEngine requirements
        bison* flex* gperf* libicu-devel libxslt-devel ruby \
        libgcrypt-devel libgcrypt pciutils-devel nss-devel libXtst-devel gperf cups-devel pulseaudio-libs-devel libgudev1-devel systemd-devel libcap-devel alsa-lib-devel flex bison ruby gcc-c++ dbus libXrandr-devel libXcomposite-devel libXcursor-devel dbus-devel fontconfig-devel \
        # Python requirements
        zlib-devel openssl-devel sqlite-devel bzip2-devel readline-devel tk-devel \
        valgrind-devel \
        # Python 3.x requirements
        # For dtrace, use systemtap-sdt-devel
        devtoolset-4-systemtap-sdt-devel \
        # PySide2 requirements
        libxslt libxml2 libxml2-devel libxslt-devel cmake3 openssl* \
        # PySide
        # Not used here: cmake gcc gcc-c++ make python-devel python-pip
        qt-devel qt-webkit-devel libxml2-devel libxslt-devel rpmdevtools \
        # Xvfb etc
        Xvfb \
        xorg-x11-server-Xvfb \
        mesa-dri-drivers \
        libxkbcommon \
        libxkbcommon-devel \
        libxkbcommon-x11 \
        libxkbcommon-x11-devel \
        # Git
        # Not used here: gcc
        curl-devel expat-devel gettext-devel openssl-devel zlib-devel \
        perl-ExtUtils-MakeMaker \
        # Various tools
        wget

# Activate devtoolset-4 gcc 5.3.1
# RUN scl enable devtoolset-4 bash
ENV PATH="/opt/rh/devtoolset-4/root/usr/bin:${PATH}"

# Set workdir
WORKDIR /workdir

# Git 2.x with "git clone -j" functionality
# https://tecadmin.net/install-git-2-0-on-centos-rhel-fedora/
ENV GIT_VER=2.9.4
RUN wget https://www.kernel.org/pub/software/scm/git/git-${GIT_VER}.tar.gz && \
    tar xzf git-${GIT_VER}.tar.gz && \
    cd git-${GIT_VER} && \
    make -j12 prefix=/usr/local/git all && \
    make prefix=/usr/local/git install && \
    cd .. && rm -rf git-${GIT_VER}
ENV PATH="/usr/local/git/bin:${PATH}"

# Qt 5.6.1, Autodesk-modified
ENV QT_VER=5.6.1
RUN git clone --recursive -j12 --branch ${QT_VER} https://code.qt.io/qt/qt5.git && \
    rm -rf qt5/qtbase && \
    rm -rf qt5/qtx11extras && \
    git clone --recursive --branch adsk-contrib/vfx/${QT_VER} https://github.com/autodesk-forks/qtbase.git qt5/qtbase && \
    git clone --recursive --branch adsk-contrib/vfx/${QT_VER} https://github.com/autodesk-forks/qtx11extras.git qt5/qtx11extras && \
    cd qt5 && \
    ./configure -help && \
    ./configure -opensource -confirm-license -nomake examples -nomake tests && \
    make -j12 && \
    make install && \
    cd .. && rm -rf qt5

# Python 3.x
# Notes:
#     https://danieleriksson.net/2017/02/08/how-to-install-latest-python-on-centos/
#     http://blog.dscpl.com.au/2015/06/installing-custom-python-version-into.html
#     https://stackoverflow.com/questions/37345044/issue-with-installing-python-2-7-8-alongside-2-7-5-on-rhel-7-2
#
ENV PYTHON_VER=3.4.6
RUN mkdir -p /usr/local/python/lib && \
    wget https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz && \
    tar xzf Python-${PYTHON_VER}.tgz && \
    cd Python-${PYTHON_VER} && \
    # Get the configure arguments from an already existing CentOS 7-installation:
    # $ python
    # >>> from distutils.sysconfig import get_config_var
    # >>> print get_config_var('CONFIG_ARGS')
    ./configure \
        --prefix=/usr/local/python \
        --enable-shared \
        LDFLAGS="-Wl,-rpath /usr/local/python/lib" \

        --build=x86_64-redhat-linux-gnu \
        --host=x86_64-redhat-linux-gnu \
        --enable-ipv6 \
        --with-dbmliborder=gdbm:ndbm:bdb \
        --with-system-expat \
        --with-system-ffi \
        --with-dtrace \
        --with-valgrind \
        build_alias=x86_64-redhat-linux-gnu \
        host_alias=x86_64-redhat-linux-gnu \
        CC=gcc \
        CFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches   -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv" \
        CPPFLAGS="" && \
    make -j12 && \
    make altinstall && \
    cd /workdir && \
    wget https://bootstrap.pypa.io/get-pip.py && \
    /usr/local/python/bin/python3.4 get-pip.py && \
    /usr/local/python/bin/pip3.4 install -U pip && \
    cd .. && rm -rf Python-${PYTHON_VER} && rm -f Python-${PYTHON_VER}.tar.xz && rm -f get-pip.py

# Register Python as default (without replacing system-python and without breaking e.g. yum)
RUN ln -s /usr/local/python/bin/python3.4 /usr/local/bin/python && \
    ln -s /usr/local/python/bin/python3.4 /usr/local/bin/python3.4 && \
    ln -s /usr/local/python/bin/pip3.4 /usr/local/bin/pip && \
    ln -s /usr/local/python/bin/pip3.4 /usr/local/bin/pip3.4
ENV PATH="/usr/local/bin:${PATH}"

# Pip packages
RUN pip install -U \
        # Qt.py testing (nosepipe)
        nose \
        nosepipe \
        six \
        # General build
        setuptools \
        wheel \
        # PySide2 docs
        sphinx && \
    ln -s /usr/local/python/bin/nosetests /usr/local/bin/nosetests

# PySide2
RUN git clone --recursive -j12 --branch 5.6 https://codereview.qt-project.org/pyside/pyside-setup && \
    cd pyside-setup && \
    python setup.py \
        # bdist_wheel \
        install \
            --ignore-git \
            --qmake=/usr/local/Qt-${QT_VER}/bin/qmake \
            --cmake=/usr/bin/cmake3 \
            --openssl=/usr/bin/openssl && \
    # /usr/local/python/bin/pip2.7 install /workdir/pyside-setup/dist/*.whl
    cd .. && rm -rf pyside-setup
# Ugly fix to make PySide2 find the Qt libs
ENV LD_LIBRARY_PATH="/usr/local/Qt-5.6.1/lib:${LD_LIBRARY_PATH}"

# PyQt5
ENV SIP_VER=4.18
ENV PYQT5_VER=5.6
RUN wget http://sourceforge.net/projects/pyqt/files/sip/sip-${SIP_VER}/sip-${SIP_VER}.tar.gz && \
    tar -xvf sip-${SIP_VER}.tar.gz && \
    cd sip-${SIP_VER} && \
    python configure.py && \
    make -j12 && \
    make install && \
    wget http://sourceforge.net/projects/pyqt/files/PyQt5/PyQt-${PYQT5_VER}/PyQt5_gpl-${PYQT5_VER}.tar.gz && \
    tar -xvf PyQt5_gpl-${PYQT5_VER}.tar.gz && \
    cd PyQt5_gpl-${PYQT5_VER} && \
    python configure.py \
        # --verbose \
        --confirm-license \
        --qmake=/usr/local/Qt-${QT_VER}/bin/qmake \
        --sip=/usr/local/python/bin/sip && \
    make -j12 && \
    make install && \
    cd .. && rm -rf PyQt5_gpl-${PYQT5_VER}

# PySide
# http://pyside.readthedocs.io/en/latest/building/options.html
RUN git clone --recursive -j12 https://github.com/pyside/pyside-setup.git && \
    cd pyside-setup && \
    python setup.py \
        install \
            --qmake=/usr/bin/qmake-qt4 \
            --cmake=/usr/bin/cmake3 \
            --openssl=/usr/bin/openssl && \
    cd .. && rm -rf pyside-setup

# PyQt4
# The version of PyQt4 must be compatible with the SIP version used to build PyQt5
ENV PYQT4_VER=4.11.4
RUN wget http://sourceforge.net/projects/pyqt/files/PyQt4/PyQt-${PYQT4_VER}/PyQt-x11-gpl-${PYQT4_VER}.tar.gz && \
    tar -xvf PyQt-x11-gpl-${PYQT4_VER}.tar.gz && \
    cd PyQt-x11-gpl-${PYQT4_VER} && \
    python configure.py \
        # --verbose \
        --confirm-license \
        --qmake=/usr/bin/qmake-qt4 && \
    make -j12 && \
    make install && \
    cd .. && rm -rf PyQt-x11-gpl-${PYQT4_VER}


